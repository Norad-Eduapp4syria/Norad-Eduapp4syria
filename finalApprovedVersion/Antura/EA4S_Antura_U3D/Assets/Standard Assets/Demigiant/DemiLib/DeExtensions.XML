<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DeExtensions</name>
    </assembly>
    <members>
        <member name="M:DG.DeExtensions.ComponentExtensions.GetOnlyComponentsInChildren``1(UnityEngine.MonoBehaviour,System.Boolean)">
            <summary>
            Returns ONLY the Components in the children, and ignores the parent.
            </summary>
            <param name="includeInactive">If TRUE also includes inactive children</param>
        </member>
        <member name="M:DG.DeExtensions.GameObjectExtensions.AwakeAndDeactivate(UnityEngine.GameObject)">
            <summary>
            Activates then immediately deactivates the target gameObject.
            Useful when wanting to call Awake before deactivating a gameObject.
            </summary>
            <param name="go"></param>
        </member>
        <member name="M:DG.DeExtensions.GameObjectExtensions.IsChildOfComponent``1(UnityEngine.GameObject)">
            <summary>Returns TRUE if the gameObject is a child of an object with the given Component</summary>
        </member>
        <member name="M:DG.DeExtensions.GameObjectExtensions.HasOrIsChildOfComponent``1(UnityEngine.GameObject)">
            <summary>Returns TRUE if the gameObject has or is a child of an object with the given Component</summary>
        </member>
        <member name="M:DG.DeExtensions.GameObjectExtensions.IsChildOfTag(UnityEngine.GameObject,System.String)">
            <summary>Returns TRUE if the gameObject is a child of the given tag</summary>
        </member>
        <member name="M:DG.DeExtensions.GameObjectExtensions.HasOrIsChildOfTag(UnityEngine.GameObject,System.String)">
            <summary>Returns TRUE if the gameObject has or is a child of the given tag</summary>
        </member>
        <member name="T:DG.DeExtensions.ListExtensions">
            <summary>
            List, IList, Array and Dictionary utils
            </summary>
        </member>
        <member name="M:DG.DeExtensions.ListExtensions.Shift``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32)">
            <summary>
            Shifts an item from an index to another, without modifying the list except than by moving elements around
            </summary>
        </member>
        <member name="M:DG.DeExtensions.ListExtensions.Shuffle``1(System.Collections.Generic.IList{``0})">
            <summary>
            Shuffles the list
            </summary>
        </member>
        <member name="M:DG.DeExtensions.ListExtensions.AddAndReturnValue``2(System.Collections.Generic.Dictionary{``0,``1},``0,``1)">
            <summary>
            Adds a key/value pair to the dictionary and returns its value
            </summary>
        </member>
        <member name="M:DG.DeExtensions.NumberExtensions.IsWithinRange(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>Returns TRUE if the int is within the given range.</summary>
            <param name="min">Min</param>
            <param name="max">Max</param>
            <param name="inclusive">If TRUE min/max range values will be valid, otherwise not</param>
            <returns></returns>
        </member>
        <member name="M:DG.DeExtensions.StringExtensions.IsNullOrEmpty(System.String,System.Boolean)">
            <summary>
            Returns TRUE if the string is null or empty
            </summary>
            <param name="trimSpaces">If TRUE (default) and the string contains only spaces, considers it empty</param>
        </member>
    </members>
</doc>
